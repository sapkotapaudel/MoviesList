{"ast":null,"code":"var _jsxFileName = \"/Users/yanapaudel/Desktop/NewReact/UserMovieList/src/components/moviesList/display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./display.module.css\";\nimport unavailablePoster from \"./../img/unavailablePoster.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = props => {\n  _s();\n\n  const [sendLikeStorage, setSendLikeStorage] = useState(false);\n  const [sendDislikeStorage, setSendDislikeStorage] = useState(false);\n  const [LoadingError, setLoadingError] = useState(true);\n  const posterSrc = props.movies.Poster === \"N/A\" ? unavailablePoster : props.movies.Poster;\n  const posterSize = props.movies.Poster === \"N/A\" ? classes.defaultPoster : \"\";\n\n  const likeHandler = imdbID => {\n    setSendLikeStorage(true);\n\n    const likeConfirmHandler = async () => {\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`, {\n        method: \"DELETE\"\n      }).then(setSendDislikeStorage(false));\n      await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`, {\n        method: 'POST',\n        body: JSON.stringify({\n          imdbID: props.movies\n        })\n      });\n    };\n\n    likeConfirmHandler();\n  };\n\n  const disLikeHandler = imdbID => {\n    setSendDislikeStorage(true);\n    setSendLikeStorage(false);\n\n    const dislikeConfirmHandler = async () => {\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`, {\n        method: 'DELETE'\n      }).then(setSendLikeStorage(false));\n      await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`, {\n        method: 'POST',\n        body: JSON.stringify({\n          imdbID: props.movies\n        })\n      });\n    };\n\n    dislikeConfirmHandler();\n  };\n\n  const removelikeHandler = imdbID => {\n    setSendLikeStorage(false);\n\n    const remove = () => {\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`, {\n        method: 'DELETE'\n      });\n    };\n\n    remove();\n  };\n\n  const removedisLikeHandler = imdbID => {\n    setSendDislikeStorage(false);\n\n    const remove = () => {\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`, {\n        method: 'DELETE'\n      });\n    };\n\n    remove();\n  };\n\n  useEffect(() => {\n    const checkMovie = async () => {\n      const response = await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${props.movies.imdbID}.json`, {\n        method: 'GET'\n      });\n      const responseData = await response.json();\n\n      if (responseData === null) {\n        console.log(responseData);\n        throw new Error(\"true\");\n      }\n\n      setSendDislikeStorage(true);\n      setLoadingError(false);\n    };\n\n    checkMovie().catch(() => {\n      setSendDislikeStorage(false);\n      setLoadingError(false);\n    });\n  }, [props.movies.imdbID], []);\n  useEffect(() => {\n    const checkMovie = async () => {\n      const response = await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${props.movies.imdbID}.json`, {\n        method: 'GET'\n      });\n      const responseData = await response.json();\n\n      if (responseData === null) {\n        console.log(responseData);\n        throw new Error(\"true\");\n      }\n\n      setSendLikeStorage(true); // console.log(props.movies.imdbID)\n\n      setLoadingError(false);\n    };\n\n    checkMovie().catch(error => {\n      setSendLikeStorage(false);\n      setLoadingError(false);\n    });\n  }, [props.movies.imdbID], []); // if(LoadingError){\n  //   return <p className={classes.loadingError}>Loading...</p>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\"*/}\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.moviesList,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: posterSrc,\n          alt: \"poster\",\n          className: posterSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.movies.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.eachMovBtn,\n          children: [!sendLikeStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => likeHandler(props.movies.imdbID),\n            className: classes.fav,\n            children: \"Favrouite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 34\n          }, this), sendLikeStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removelikeHandler(props.movies.imdbID),\n            className: classes.fav,\n            children: \"Remove Favrouite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), !sendDislikeStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => disLikeHandler(props.movies.imdbID),\n            className: classes.dislike,\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }, this), sendDislikeStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removedisLikeHandler(props.movies.imdbID),\n            className: classes.dislike,\n            children: \"Remove Disliked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Display, \"RZCiukUqnGFuVxPKCrt3x+ISEWI=\");\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useState","classes","unavailablePoster","Display","props","sendLikeStorage","setSendLikeStorage","sendDislikeStorage","setSendDislikeStorage","LoadingError","setLoadingError","posterSrc","movies","Poster","posterSize","defaultPoster","likeHandler","imdbID","likeConfirmHandler","fetch","method","then","body","JSON","stringify","disLikeHandler","dislikeConfirmHandler","removelikeHandler","remove","removedisLikeHandler","checkMovie","response","responseData","json","console","log","Error","catch","error","moviesList","Title","eachMovBtn","fav","dislike"],"sources":["/Users/yanapaudel/Desktop/NewReact/UserMovieList/src/components/moviesList/display.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classes from \"./display.module.css\";\nimport unavailablePoster from \"./../img/unavailablePoster.jpeg\";\n\n\n\nconst Display = (props) => {\n  const [sendLikeStorage, setSendLikeStorage] = useState(false);\n  const [sendDislikeStorage, setSendDislikeStorage] = useState(false);\n  const [LoadingError, setLoadingError] = useState(true);\n\n  const posterSrc =\n    props.movies.Poster === \"N/A\" ? unavailablePoster : props.movies.Poster;\n  const posterSize = props.movies.Poster === \"N/A\" ? classes.defaultPoster : \"\";\n\n  const likeHandler = (imdbID) => {\n    setSendLikeStorage(true);\n\n\n    const likeConfirmHandler = async () => {\n\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`, {method:\"DELETE\"}).then(setSendDislikeStorage(false))\n       \n        await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`,{\n            method:'POST',\n            body:JSON.stringify({imdbID:props.movies})\n        })\n    }\n\n    likeConfirmHandler()\n  };\n\n  const disLikeHandler = (imdbID) => {\n    setSendDislikeStorage(true)\n    setSendLikeStorage(false);\n\n   \n    const dislikeConfirmHandler = async () => {\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`,{\n        method: 'DELETE'\n      }).then(setSendLikeStorage(false))\n      \n        await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`,{\n            method:'POST',\n            body:JSON.stringify({imdbID:props.movies})\n        })\n    }\n\n    dislikeConfirmHandler();\n    \n  }\n\n  const removelikeHandler = (imdbID) =>{\n\n    setSendLikeStorage(false);\n    const remove=()=>{\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${imdbID}.json`,{\n        method: 'DELETE'\n      })\n\n    }\n    remove()\n  }\n\n  const removedisLikeHandler = (imdbID) => {\n\n    setSendDislikeStorage(false)\n\n    const remove=()=>{\n      fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${imdbID}.json`,{\n        method: 'DELETE'\n      })\n\n    }\n    remove()\n  }\n\n  useEffect( ()=>{\n    const checkMovie = async ()=>{\n    const response = await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/dislikedmovies/${props.movies.imdbID}.json`,{\n      method:'GET'\n    })\n\n    const responseData = await response.json();\n    if (responseData===null) {\n      console.log(responseData)\n      throw new Error(\"true\");\n      \n    }\n\n    setSendDislikeStorage(true);\n    setLoadingError(false);\n\n  }\ncheckMovie().catch(()=>{\n  setSendDislikeStorage(false);\n  setLoadingError(false);\n})}, [props.movies.imdbID], [])\n\n  useEffect( ()=>{\n    const checkMovie = async ()=>{\n    const response = await fetch(`https://mymovielist-7f102-default-rtdb.firebaseio.com/likedmovies/${props.movies.imdbID}.json`,{\n      method:'GET'\n    })\n\n    const responseData = await response.json();\n    if (responseData===null) {\n      console.log(responseData)\n      throw new Error(\"true\");\n      \n    }\n\n    setSendLikeStorage(true);\n    // console.log(props.movies.imdbID)\n    setLoadingError(false);\n  }\ncheckMovie().catch((error)=>{\n  setSendLikeStorage(false);\n  setLoadingError(false);\n})}, [props.movies.imdbID], [])\n\n// if(LoadingError){\n//   return <p className={classes.loadingError}>Loading...</p>;\n// }\n\n  return (\n    <React.Fragment>\n      */}\n      <div className={classes.moviesList}>\n        <div>\n          {<img src={posterSrc} alt=\"poster\" className={posterSize} />}\n          <div>{props.movies.Title}</div>\n        \n          <div className={classes.eachMovBtn}>\n            {!sendLikeStorage && <button onClick={()=>likeHandler(props.movies.imdbID)} className={classes.fav}>Favrouite</button>}\n            {sendLikeStorage && <button onClick={()=>removelikeHandler(props.movies.imdbID)} className={classes.fav}>Remove Favrouite</button>}\n            \n            {!sendDislikeStorage && <button onClick={()=>disLikeHandler(props.movies.imdbID)} className={classes.dislike}>Dislike</button>}\n            {sendDislikeStorage && <button onClick={()=>removedisLikeHandler(props.movies.imdbID)} className={classes.dislike}>Remove Disliked</button>}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Display;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}