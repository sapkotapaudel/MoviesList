{"ast":null,"code":"var _jsxFileName = \"/Users/yanapaudel/Desktop/NewReact/UserMovieList/src/components/moviesList/catchDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Display from \"./display\";\nimport classes from \"./catchDisplay.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catchdisplay = props => {\n  _s();\n\n  const [allMovies, setAllMovies] = useState([]);\n  const [httpError, setHttpError] = useState(false);\n  const [loadingError, setloadingError] = useState(true); // useEffect(() => {\n  //   const fetchMovies = async () => {\n  //     const response = await fetch(\n  //       `http://www.omdbapi.com/?s=${props.onChange}&apikey=10cf3ef8`\n  //     );\n  //     const responseData = await response.json();\n  //     if (responseData.Response === \"False\") {\n  //       setHttpError(true);\n  //       throw new Error(\"Something went wrong\");\n  //     }\n  //     console.log(\"ResonseData:\");\n  //     console.log(responseData);\n  //     const movies = responseData.Search;\n  //     setAllMovies(movies);\n  //     setloadingError(false)\n  //   };\n  //   fetchMovies(props.onChange).catch(() => {\n  //     setloadingError(false)\n  //     setHttpError(true)\n  //   });\n  // }, [props]);\n\n  if (loadingError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.loadingError,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputError,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Couldn't find any movie of this name. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Please enter a new movie name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.allMovies,\n      children: allMovies.map(movie => /*#__PURE__*/_jsxDEV(Display, {\n        movies: movie\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Catchdisplay, \"PqYbkQVN8PsyvUjUYgBZnHQqlBw=\");\n\n_c = Catchdisplay;\nexport default Catchdisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catchdisplay\");","map":{"version":3,"names":["React","useState","useEffect","Display","classes","Catchdisplay","props","allMovies","setAllMovies","httpError","setHttpError","loadingError","setloadingError","inputError","map","movie","Math","random"],"sources":["/Users/yanapaudel/Desktop/NewReact/UserMovieList/src/components/moviesList/catchDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Display from \"./display\";\nimport classes from \"./catchDisplay.module.css\";\n\nconst Catchdisplay = (props) => {\n  const [allMovies, setAllMovies] = useState([]);\n  const [httpError, setHttpError] = useState(false);\n  const [loadingError, setloadingError] = useState(true);\n\n  // useEffect(() => {\n  //   const fetchMovies = async () => {\n  //     const response = await fetch(\n  //       `http://www.omdbapi.com/?s=${props.onChange}&apikey=10cf3ef8`\n  //     );\n\n  //     const responseData = await response.json();\n\n  //     if (responseData.Response === \"False\") {\n  //       setHttpError(true);\n  //       throw new Error(\"Something went wrong\");\n  //     }\n\n\n  //     console.log(\"ResonseData:\");\n  //     console.log(responseData);\n  //     const movies = responseData.Search;\n      \n  //     setAllMovies(movies);\n  //     setloadingError(false)\n  //   };\n\n  //   fetchMovies(props.onChange).catch(() => {\n  //     setloadingError(false)\n  //     setHttpError(true)\n  //   });\n  // }, [props]);\n\n  if (loadingError) {\n    return <p className={classes.loadingError}>Loading...</p>;\n  }\n\n  if (httpError) {\n    return (\n      <div className={classes.inputError}>\n        <div>Couldn't find any movie of this name. </div>\n        <div> Please enter a new movie name.</div>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.allMovies}>\n      {allMovies.map((movie) => (\n        <Display key={Math.random()} movies={movie} />\n      ))}\n      </div>\n      \n    </React.Fragment>\n  );\n};\n\nexport default Catchdisplay;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD,CAH8B,CAK9B;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAGA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,IAAIU,YAAJ,EAAkB;IAChB,oBAAO;MAAG,SAAS,EAAEP,OAAO,CAACO,YAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAIF,SAAJ,EAAe;IACb,oBACE;MAAK,SAAS,EAAEL,OAAO,CAACS,UAAxB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;EAED,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAK,SAAS,EAAET,OAAO,CAACG,SAAxB;MAAA,UACCA,SAAS,CAACO,GAAV,CAAeC,KAAD,iBACb,QAAC,OAAD;QAA6B,MAAM,EAAEA;MAArC,GAAcC,IAAI,CAACC,MAAL,EAAd;QAAA;QAAA;QAAA;MAAA,QADD;IADD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAxDD;;GAAMZ,Y;;KAAAA,Y;AA0DN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}